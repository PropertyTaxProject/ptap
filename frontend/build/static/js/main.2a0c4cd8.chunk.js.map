{"version":3,"sources":["general/header.jsx","serviceWorker.js","landing/detroit-landing-page.jsx","requests.js","appeal/homeowner/contact-info.jsx","appeal/homeowner/review-property.jsx","appeal/comparables/comparables.jsx","appeal/homeowner/eligibility-requirements.jsx","appeal/review/review-page.jsx","appeal/appeal.jsx","landing/select-region.jsx","landing/final-page.jsx","index.jsx"],"names":["Header","Layout","PTAPHeader","theme","mode","Item","key","href","Boolean","window","location","hostname","match","target","rel","title","width","height","src","frameborder","allow","allowfullscreen","type","to","submitForm","info","a","axios","post","resp","console","log","data","response","error","submitAppeal","targetProperty","comparables","userInfo","userPropInfo","uuid","body","target_pin","detroit","responseType","saveAs","name","split","join","toLowerCase","formItemLayout","labelCol","span","wrapperCol","xs","sm","md","lg","tailFormItemLayout","offset","HomeownerInfo","props","useState","showMailingAddr","updateMailingAddr","showAltContact","updateAltContact","label","rules","required","message","Group","onChange","e","value","style","display","placeholder","whitespace","PropertyForm","Form","useForm","form","city","pin","eligibility","onFinish","values","appealType","appeal_type","labelAlign","scrollToFirstError","autoComplete","noStyle","onClick","back","htmlType","TextArea","Input","re","PropertyInfo","propInfo","cols","gridStyle","Math","round","textAlign","characteristics","Object","entries","filter","description","sort","title1","title2","t1","t2","map","Grid","hoverable","replace","x","toUpperCase","createTitle","Characteristics","submitPropReview","showCharInput","updateCharInput","rows","Column","Table","CharacteristicsTable","headers","removeComparable","loading","setLoading","Columns","header","dataIndex","labeledData","property","idx","dataSource","scroll","render","text","record","danger","Number","parseInt","then","submitted","lookupPin","Lookup","pins","setPin","logPin","logUuid","logEligibility","logResponse","theResponse","candidates","err","columns","getFieldValue","alert","PIN","selectPin","layout","compact","length","userCols","compCols","PropertyInfo2","confirmInfo","ReviewForm","properties","ele","i","Appeal","setComparables","setHeaders","setTargetProperty","setInfo","setUserPropInfo","setPropInfo","sessionUuid","setUuid","reportedEligibility","setEligibility","reviewAppeal","setReview","reviewComps","setReviewComps","view","selectedPin","givenUuid","givenEligibility","labeled_headers","prop_info","PTAPHeader3","PTAPHeader4","Content","Footer","Page","className","padding","path","component","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2a0c4cd8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\nconst PTAPHeader = () => (\r\n  <Header>\r\n    <Menu theme=\"dark\" mode=\"horizontal\">\r\n      <Menu.Item key=\"1\"><a href=\"/\">Property Tax Appeal Project: Automated Appeal System</a></Menu.Item>\r\n    </Menu>\r\n  </Header>\r\n);\r\n\r\nexport default PTAPHeader;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Button, Space } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PTAPHeader = () => (\r\n  <>\r\n    <h1>Welcome to the Property Tax Appeal Project&apos;s automated appeal system for Detroit, Michigan.</h1>\r\n    <h2>The Tax Foreclosure Crisis</h2>\r\n\r\n    <ul>\r\n      <li>According to the Michigan Constitution, cities cannot assess a property at more than 50% of its market value.</li>\r\n      <li>So, if your home is worth $50,000, the “Assessed Value” on your property tax bill cannot be more than $25,000.</li>\r\n      <li>But, between 2009-2015, the City of Detroit illegally inflated the “Assessed Value” for&nbsp;\r\n        <a href='https://southerncalifornialawreview.com/2018/01/02/stategraft-article-by-bernadette-atuahene-timothy-r-hodge/'\r\n           target='_blank' rel=\"noopener noreferrer\">55% to 85%</a> of its properties.\r\n      </li>\r\n      <li>In 2019, the problem continued. The City illegally inflated the “Assessed Value” for 84% of the lowest valued homes.</li>\r\n      <li>As a result, the City has overtaxed Detroit homeowners by at least&nbsp;\r\n        <a href='https://www.detroitnews.com/story/news/local/detroit-city/housing/2020/01/09/detroit-homeowners-overtaxed-600-million/2698518001/'\r\n           target='_blank' rel=\"noopener noreferrer\">$600 million</a> and one out of every 3 homes went through property tax foreclosure.\r\n      </li>\r\n      <li><a href='https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3202860' target='_blank' rel=\"noopener noreferrer\">25% of the property tax foreclosures</a> of homes \r\n      lower in value would not have happened without these illegally inflated property tax assessments</li>\r\n    </ul>\r\n    <p>Check out a short video below and visit the <a href='https://illegalforeclosures.org/' target='_blank' rel=\"noopener noreferrer\">\r\n      Coalition for Property Tax Justice website</a> for more information!</p>\r\n    <iframe title=\"Illegal Foreclosures\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/J1wlRYB3p7E\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n    <h2>Why Should You Appeal Your Property Tax Assessment?</h2>\r\n    <ul>\r\n      <li>You can make sure that your property is correctly valued, which may lower your property taxes.</li>\r\n      <li>Appealing is FREE -- our team does not charge any fee for our services!</li>\r\n      <li>Appealing takes very little time  – Our team does a lot of the leg work for you.</li>\r\n      <li>It is easy – you just need to complete our short online application OR call our hotline and our team will do it for you.</li>\r\n    </ul>\r\n    <h2>What is the Property Tax Appeal Project?</h2>\r\n    <ul>\r\n      <li>It is a free legal service provided by the Coalition for Property Tax Justice and the University of Michigan Law School.</li>\r\n      <li>Our team is here both to help you file the appeal and to understand the appeal process.</li>\r\n      <li>During the 2020 appeals process, 100% of our client’s appeals were successful!</li>\r\n    </ul>\r\n    <Space>\r\n      <Button type=\"primary\"><Link to=\"/detroitappeal\">Click here to get started</Link></Button>\r\n    </Space>\r\n  </>\r\n);\r\n\r\nexport default PTAPHeader;\r\n","import axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport const submitForm = async (info) => {\r\n  try {\r\n    const resp = await axios.post('/api_v1/submit', info);\r\n    console.log(resp);\r\n    return resp.data.response;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const submitAppeal = async (targetProperty, comparables, userInfo, userPropInfo, uuid) => {\r\n  try {\r\n    const body = { target_pin: targetProperty, comparables, uuid, ...userInfo, ...userPropInfo };\r\n    console.log(body);\r\n    //const detroit = userInfo.appeal_type === 'detroit_single_family'; TEMPORARY DOWNLOAD ALL\r\n    const detroit = true;\r\n    const resp = await axios.post('/api_v1/submit2', body, { responseType: detroit ? 'blob' : 'json' }); // detroit downloads file, chicago returns json\r\n    if (detroit) {\r\n      saveAs(resp.data, `${userInfo.name.split(' ').join('-').toLowerCase()}-appeal.docx`);\r\n    } else {\r\n      console.log(resp);\r\n    }\r\n    // TRIGGER SUBMISSION PAGE\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Row,\r\n  Col,\r\n  Space,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 20,\r\n    },\r\n    md: {\r\n      span: 18,\r\n    },\r\n    lg: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n  },\r\n};\r\n\r\nconst HomeownerInfo = (props) => {\r\n  const [showMailingAddr, updateMailingAddr] = useState(false);\r\n  const [showAltContact, updateAltContact] = useState(false);\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}>\r\n          <h1>Homeowner Information</h1>\r\n          <p>How should we contact you?</p>\r\n        </Col>\r\n      </Row>\r\n      <Form.Item\r\n        name=\"name\"\r\n        label=\"Full Name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your full name!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your Email!',\r\n            type: 'email',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n    \r\n      <Form.Item\r\n        name=\"phone\"\r\n        label=\"Phone Number\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your phone number!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"address\"\r\n        label=\"Street Address\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your street address!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"city\"\r\n        label=\"City\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your city!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"state\"\r\n        label=\"State\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your State!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"zip\"\r\n        label=\"Zip Code\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your zip code!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      \r\n      <Form.Item\r\n        name=\"mailingsame\"\r\n        label=\"My mailing address is the same as my street address\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please respond!',\r\n          },\r\n        ]}\r\n      >\r\n        <Radio.Group onChange={e => updateMailingAddr(e.target.value)}>\r\n          <Radio value={'Yes'}>Yes</Radio>\r\n          <Radio value={'No'}>No</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"mailingaddress\"\r\n        label=\"Enter your Mailing Address\"\r\n        style={showMailingAddr === 'No' ? { display: ''} : {display: 'none'}}\r\n      >\r\n        {showMailingAddr === 'No' && <Input placeholder=\"Please enter your mailing address\" />}\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"altcontact\"\r\n        label=\"Did someone help you fill out this form?\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please respond!',\r\n          },\r\n        ]}\r\n      >\r\n        <Radio.Group onChange={e => updateAltContact(e.target.value)}>\r\n          <Radio value={'Yes'}>Yes</Radio>\r\n          <Radio value={'No'}>No</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"altcontactname\"\r\n        label=\"Enter their name\"\r\n        style={showAltContact === 'Yes' ? { display: ''} : {display: 'none'}}\r\n      >\r\n        {showAltContact === 'Yes' && <Input placeholder=\"Please enter their name\" />}\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"altcontactrelationship\"\r\n        label=\"What is your relationship with them?\"\r\n        style={showAltContact === 'Yes' ? { display: ''} : {display: 'none'}}\r\n      >\r\n        {showAltContact === 'Yes' && <Input placeholder=\"Please enter your relationship\" />}\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"altcontactemail\"\r\n        label=\"What is their email address?\"\r\n        style={showAltContact === 'Yes' ? { display: ''} : {display: 'none'}}\r\n      >\r\n        {showAltContact === 'Yes' && <Input placeholder=\"Please enter their email\" />}\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"altcontactphone\"\r\n        label=\"What is their phone number?\"\r\n        style={showAltContact === 'Yes' ? { display: ''} : {display: 'none'}}\r\n      >\r\n        {showAltContact === 'Yes' && <Input placeholder=\"Please enter their phone number\" />}\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"altcontactpreferred\"\r\n        label=\"What is their preferred contact method?\"\r\n        style={showAltContact === 'Yes' ? { display: ''} : {display: 'none'}}\r\n      >\r\n        {showAltContact === 'Yes' && \r\n          <Radio.Group>\r\n            <Radio value='Phone'>Phone</Radio>\r\n            <Radio value='Email'>Email</Radio>\r\n            <Radio value='Both'>Both/No Preference</Radio>\r\n          </Radio.Group>\r\n        }\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"preferred\"\r\n        label=\"What is your preferred contact method?\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please mark your preferred method!',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Radio.Group>\r\n          <Radio value='Phone'>Phone</Radio>\r\n          <Radio value='Email'>Email</Radio>\r\n          <Radio value='Both'>Both/No Preference</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"heardabout\"\r\n        label=\"How did you hear about us?\"\r\n      >\r\n        <Input placeholder='Enter how you heard about us.'></Input>\r\n      </Form.Item>\r\n\r\n    </>\r\n  )\r\n};\r\n\r\nconst PropertyForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { submitForm, city, pin, eligibility, uuid } = props;\r\n\r\n  const onFinish = (values) => {\r\n    let appealType;\r\n    if (city === 'detroit') {\r\n      appealType = 'detroit_single_family';\r\n    } else if (city === 'chicago') {\r\n      appealType = 'cook_county_single_family';\r\n    }\r\n    const info = { ...values, pin, appeal_type: appealType, eligibility, uuid };\r\n    console.log('Received values of form: ', info);\r\n    submitForm(info);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"Housing Information\"\r\n      onFinish={onFinish}\r\n      labelAlign=\"left\"\r\n      scrollToFirstError\r\n      autoComplete=\"off\"\r\n      {...formItemLayout}\r\n    >\r\n      <Row>\r\n        <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}></Col>\r\n      </Row>\r\n      <Form.Item noStyle>\r\n        <HomeownerInfo/>\r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Space>\r\n          <Button type=\"danger\" onClick={props.back} >Back</Button>\r\n          <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n        </Space>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PropertyForm;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Card,\r\n  Divider,\r\n  Input,\r\n  Radio\r\n} from 'antd';\r\n\r\nconst { TextArea } = Input;\r\nconst re = /(\\b[a-z](?!\\s))/g;\r\nconst createTitle = (title) => title.replace('_', ' ').replace(re, (x) => x.toUpperCase());\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 20,\r\n    },\r\n    md: {\r\n      span: 18,\r\n    },\r\n    lg: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\n\r\n// displays the target property information\r\nconst PropertyInfo = (props) => {\r\n  const { targetProperty } = props;\r\n  const { propInfo } = props;\r\n  const { cols } = props;\r\n  const gridStyle = {\r\n    width: `${Math.round(100 / cols)}%`,\r\n    textAlign: 'center',\r\n  };\r\n  const characteristics = Object.entries(targetProperty).filter(([title, description]) => (\r\n    title !== '' && description !== '' && title !== 'PIN' && title !== 'Distance'\r\n  ));\r\n  characteristics.sort(([title1], [title2]) => {\r\n    const t1 = title1.toLowerCase();\r\n    const t2 = title2.toLowerCase();\r\n    if (t1 > t2) { return 1; }\r\n    if (t1 < t2) { return -1; }\r\n    return 0;\r\n  });\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}>\r\n          <h1>Your Property</h1>\r\n          <p>Below is the data that we have on file for your property.</p>\r\n          <p>{propInfo}</p>\r\n          <br />\r\n        </Col>\r\n      </Row>\r\n      {characteristics.map(([title, description]) => (\r\n        <Card.Grid hoverable={false} style={gridStyle}>\r\n          <Row><b>{createTitle(title)}</b></Row>\r\n          <Row><p>{description}</p></Row>\r\n        </Card.Grid>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Characteristics = (props) => {\r\n  const {\r\n    targetProperty,\r\n    propInfo,\r\n    submitPropReview,\r\n    back,\r\n  } = props;\r\n\r\n  const [form] = Form.useForm();\r\n  const [showCharInput, updateCharInput] = useState(false);\r\n\r\n\r\n  const onFinish = (info) => {\r\n    console.log('Received values of form: ', info);\r\n    submitPropReview(info);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PropertyInfo \r\n        targetProperty={targetProperty} \r\n        cols={5}\r\n        propInfo={propInfo}\r\n      />\r\n      <Divider />\r\n\r\n      <Form\r\n        form={form}\r\n        name=\"Housing Information\"\r\n        onFinish={onFinish}\r\n        labelAlign=\"left\"\r\n        scrollToFirstError\r\n        autoComplete=\"off\"\r\n        {...formItemLayout}\r\n      >\r\n        <Row>\r\n          <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}></Col>\r\n        </Row>\r\n        <Form.Item \r\n          name=\"validcharacteristics\" \r\n          rules={[{ required: true, message: 'Your response is required.' }]}\r\n          label = \"Are these characteristics correct?\"\r\n        >\r\n          <Radio.Group onChange={e => updateCharInput(e.target.value)}>\r\n            <Radio value='Yes'>Yes</Radio>\r\n            <Radio value='No'>No</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"characteristicsinput\"\r\n          label=\"What about these characteristics is incorrect?\"\r\n          style={showCharInput === 'No' ? { display: ''} : {display: 'none'}}\r\n        >\r\n          {showCharInput === 'No' && <TextArea placeholder=\"Please provide as much information as you can.\" rows={4}/>}\r\n        </Form.Item>\r\n               \r\n        <Form.Item\r\n        name=\"valueestimate\"\r\n        label=\"How much do you think your house would sell for right now, as is?\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please enter a response!',\r\n          },\r\n        ]}\r\n        >\r\n          <Input placeholder='It is ok to enter unsure if you do not know.' />\r\n        </Form.Item>\r\n               \r\n        <Form.Item>\r\n          <Space>\r\n            <Button type=\"danger\" onClick={back} >Back</Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n          </Space>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Characteristics;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Divider,\r\n  Card,\r\n} from 'antd';\r\n\r\nconst { Column } = Table;\r\n\r\nconst re = /(\\b[a-z](?!\\s))/g;\r\nconst createTitle = (title) => title.replace('_', ' ').replace(re, (x) => x.toUpperCase());\r\n\r\n// displays the comparable properties\r\nconst CharacteristicsTable = (props) => {\r\n  const {\r\n    comparables,\r\n    headers,\r\n    submitAppeal,\r\n    removeComparable,\r\n    back,\r\n  } = props;\r\n  const data = comparables;\r\n  const [loading, setLoading] = useState(false);\r\n  const Columns = headers.map(\r\n    (header) => <Column title={createTitle(header)} dataIndex={header} key={header} />,\r\n  ).sort();\r\n\r\n  const labeledData = data.map((property, idx) => ({ property: `Comparable ${idx + 1}`, ...property }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}>\r\n          <h2>Pick the 5 properties that are the most similar to your property.</h2>\r\n          <p>It is okay if you are unsure, your advocate will talk with you about this more. Do your best to pick the 5 properties that seem most similar to yours.</p>\r\n          <p>Below is an automatically generated list of homes in your area that have recently sold. This information is part of what the City uses to determine the “Assessed Value” on your property tax bill. It is really important the City only consider recent home sale values of properties that are the most similar to yours.</p>\r\n          <p>Delete any properties which are not comparables. The top five comparables (comparable 1 to comparable 5) will be submitted.</p>\r\n          <br />\r\n        </Col>\r\n      </Row>\r\n      <Table dataSource={labeledData} loading={loading} scroll={{ x: true }}>\r\n        <Column title=\"Property\" dataIndex=\"property\" key=\"property\" />\r\n        {Columns}\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record) => (\r\n            record.property === 'Your Property' ? null\r\n              : (\r\n                <Button\r\n                  danger\r\n                  onClick={() => {\r\n                    setLoading(true);\r\n                    removeComparable(Number.parseInt(record.property.split(' ')[1], 10)).then(() => {\r\n                      setLoading(false);\r\n                    });\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              )\r\n          )}\r\n        />\r\n      </Table>\r\n      <Space>\r\n        <Button\r\n          type=\"danger\"\r\n          onClick={back}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={submitAppeal}\r\n        >\r\n          Review Information\r\n        </Button>\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\n// displays the target property information\r\nconst PropertyInfo = (props) => {\r\n  const { targetProperty } = props;\r\n  const { propInfo } = props;\r\n  const { cols } = props;\r\n  const gridStyle = {\r\n    width: `${Math.round(100 / cols)}%`,\r\n    textAlign: 'center',\r\n  };\r\n  const characteristics = Object.entries(targetProperty).filter(([title, description]) => (\r\n    title !== '' && description !== '' && title !== 'PIN' && title !== 'Distance'\r\n  ));\r\n  characteristics.sort(([title1], [title2]) => {\r\n    const t1 = title1.toLowerCase();\r\n    const t2 = title2.toLowerCase();\r\n    if (t1 > t2) { return 1; }\r\n    if (t1 < t2) { return -1; }\r\n    return 0;\r\n  });\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}>\r\n          <h1>Your Property</h1>\r\n          <p>Below is the data that we have on file for your property.</p>\r\n          <p>{propInfo}</p>\r\n          <br />\r\n        </Col>\r\n      </Row>\r\n      {characteristics.map(([title, description]) => (\r\n        <Card.Grid hoverable={false} style={gridStyle}>\r\n          <Row><b>{createTitle(title)}</b></Row>\r\n          <Row><p>{description}</p></Row>\r\n        </Card.Grid>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Characteristics = (props) => {\r\n  const {\r\n    comparables,\r\n    headers,\r\n    targetProperty,\r\n    propInfo,\r\n    submitAppeal,\r\n    removeComparable,\r\n    back,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <PropertyInfo \r\n        targetProperty={targetProperty} \r\n        cols={5}\r\n        propInfo={propInfo} />\r\n      <Divider />\r\n      <CharacteristicsTable\r\n        comparables={comparables}\r\n        headers={headers}\r\n        removeComparable={removeComparable}\r\n        submitAppeal={submitAppeal}\r\n        back={back}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Characteristics;\r\n","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Table,\r\n  Radio\r\n} from 'antd';\r\n\r\nimport axios from 'axios';\r\n\r\nvar submitted = false;\r\n\r\nconst lookupPin = async (data) => {\r\n  try {\r\n    console.log(data);\r\n    return (await (axios.post('/api_v1/pin-lookup', data))).data.response;\r\n  } catch (err) {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Lookup = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [pins, setPin] = useState([]);\r\n\r\n  const { logPin, city, logUuid, logEligibility } = props;\r\n\r\n  const logResponse = (theResponse) => {\r\n    submitted = true;\r\n    try {\r\n      setPin(theResponse.candidates);\r\n      logUuid(theResponse.uuid);\r\n    } catch (err) {\r\n      setPin([]);\r\n    }\r\n  }\r\n\r\nconst selectPin = (record) => { //determine eligibility and log pin\r\n  var eligibility = true;\r\n  if (form.getFieldValue('residence') !== 'Yes'){\r\n    alert(\"You may not be eligible to receive our services. Please contact our hotline at XXX-XXX-XXXX. Code: Residency\");\r\n    eligibility = false;\r\n  } else if (form.getFieldValue('owner') !== 'Yes'){\r\n    alert(\"You may not be eligible to receive our services. Please contact our hotline at XXX-XXX-XXXX. Code: Ownership\");\r\n    eligibility = false;\r\n  } else if (record.eligibility === false){\r\n    alert(\"You may not be eligible to receive our services. Please contact our hotline at XXX-XXX-XXXX. Code: Assessed Value\");\r\n    eligibility = false;\r\n  }\r\n  logPin(record.PIN);\r\n  logEligibility(eligibility);\r\n};\r\n\r\n  let appealType;\r\n  if (city === 'detroit') {\r\n    appealType = 'detroit_single_family';\r\n  } else if (city === 'chicago') {\r\n    appealType = 'cook_county_single_family';\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'Address',\r\n      key: 'Address',\r\n    },\r\n    {\r\n      title: 'Pin',\r\n      dataIndex: 'PIN',\r\n      key: 'pin',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Button onClick={() => { selectPin(record); }}>Select</Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <h2>The Process</h2>\r\n        <ul>\r\n          <li>Step 1: Complete this online application by February 10, 2020. If you have any problems with the application, call our hotline or email us (\r\n            <a href='mailto:law-propertytax@umich.edu?subject=Request for Assistance'>law-propertytax@umich.edu</a>) and our staff can help you.</li>\r\n          <li>Step 2: Once you complete the application, our team will receive a draft appeal letter.</li>\r\n          <li>Step 3: Our team will call you to review the appeal letter.</li>\r\n          <li>Step 4: Our team will send you a “Letter of Authorization,” which you must sign in order for us to represent you and send the appeal in on your behalf.</li>\r\n          <li>Step 5: On February 15, 2021, our team will submit the necessary documents at the Assessor’s Review (the first stage of the appeal process).</li>\r\n          <li>Step 6: On March 8, 2021, our team will file the appeal documents at the March Board of Review (the second stage of the appeal process).</li>\r\n          <li>Step 7: Sometime in March, the City will send you its decision.</li>\r\n          <li>Step 8: Our team will follow up with you to discuss other housing-related resources.</li>\r\n        </ul>\r\n      <h2>Am I eligible for free services?</h2>\r\n\r\n      <Form\r\n        form={form}\r\n        name=\"Pin Lookup\"\r\n        layout='vertical'\r\n        onFinish={async (data) => { logResponse(await lookupPin({ appeal_type: appealType, ...data })); }}\r\n        labelAlign=\"left\"\r\n        scrollToFirstError\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item \r\n          name=\"residence\" \r\n          rules={[{ required: true, message: 'Your response is required.' }]}\r\n          label=\"Is this home your primary residence, meaning the place you live most of the year?\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value='Yes'>Yes</Radio>\r\n            <Radio value='No'>No</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item \r\n          name=\"owner\" \r\n          rules={[{ required: true, message: 'Your response is required.' }]}\r\n          label = \"Do you own this home?\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value='Yes'>Yes</Radio>\r\n            <Radio value='No'>No</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <p style={{ width: '350px' }}>Finally, enter your street number and street name and select your property from the table.</p>\r\n\r\n        <Input.Group compact>\r\n          <Form.Item style={{ width: '100px' }} name=\"st_num\" rules={[{ required: true, message: 'Street name is required.' }]}>\r\n            <Input type=\"number\" placeholder=\"number\" />\r\n          </Form.Item>\r\n          <Form.Item style={{ width: '300px' }} name=\"st_name\" rules={[{ required: true, message: 'Street name is required.' }]}>\r\n            <Input placeholder=\"street\" />\r\n          </Form.Item>\r\n        </Input.Group>\r\n        <Button type=\"primary\" htmlType=\"submit\">Lookup Pin</Button>\r\n      </Form>\r\n\r\n      {(pins.length !== 0\r\n        ? (\r\n          <>\r\n            <br />\r\n            <Table columns={columns} dataSource={pins} />\r\n          </>\r\n        )\r\n        : (submitted ? 'Your property could not be found. Please try searching again.' : null))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lookup;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Divider,\r\n  Card,\r\n} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst re = /(\\b[a-z](?!\\s))/g;\r\nconst createTitle = (title) => title.replace('_', ' ').replace(re, (x) => x.toUpperCase());\r\n\r\n\r\nconst userCols = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Mailing Address',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'City',\r\n    dataIndex: 'city',\r\n    key: 'city',\r\n  },\r\n  {\r\n    title: 'Zip Code',\r\n    dataIndex: 'zip',\r\n    key: 'zip',\r\n  },\r\n  {\r\n    title: 'Preferred Contact Method',\r\n    dataIndex: 'preferred',\r\n    key: 'preferred',\r\n  },\r\n  {\r\n    title: 'Phone',\r\n    dataIndex: 'phone',\r\n    key: 'phone',\r\n  },\r\n  {\r\n    title: 'Email',\r\n    dataIndex: 'email',\r\n    key: 'email',\r\n  },\r\n];\r\n\r\nconst compCols = [\r\n  {\r\n    title: 'Address',\r\n    dataIndex: 'Address',\r\n    key: 'Address'\r\n  },\r\n  {\r\n    title: 'Pin',\r\n    dataIndex: 'PIN',\r\n    key: 'PIN'\r\n  },\r\n  {\r\n    title: 'Assessed Value',\r\n    dataIndex: 'assessed_value',\r\n    key: 'assessed_value'\r\n  },\r\n  {\r\n    title: 'Sale Price (if available)',\r\n    dataIndex: 'Sale Price',\r\n    key: 'Sale Price'\r\n  },\r\n  {\r\n    title: 'Sale Date',\r\n    dataIndex: 'Sale Date',\r\n    key: 'Sale Date'\r\n  },\r\n];\r\n\r\n// displays the review page\r\nconst PropertyInfo2 = (props) => {\r\n    const {\r\n        confirmInfo,\r\n        cols,\r\n        propInfo,\r\n        userInfo,\r\n        comparables,\r\n        targetProperty,\r\n        back,\r\n      } = props;\r\n\r\n    const gridStyle = {\r\n      width: `${Math.round(100 / cols)}%`,\r\n      textAlign: 'center',\r\n    };\r\n    const characteristics = Object.entries(targetProperty).filter(([title, description]) => (\r\n      title !== '' && description !== ''\r\n    ));\r\n    characteristics.sort(([title1], [title2]) => {\r\n      const t1 = title1.toLowerCase();\r\n      const t2 = title2.toLowerCase();\r\n      if (t1 > t2) { return 1; }\r\n      if (t1 < t2) { return -1; }\r\n      return 0;\r\n    });\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}>\r\n            <h1>Your Appeal</h1>\r\n            <p>Below is the data that we will use to construct your appeal.</p>\r\n            <Space/>\r\n            <h3>Your Property Information</h3>\r\n          </Col>\r\n        </Row>\r\n        {characteristics.map(([title, description]) => (\r\n          <Card.Grid hoverable={false} style={gridStyle}>\r\n            <Row><b>{createTitle(title)}</b></Row>\r\n            <Row><p>{description}</p></Row>\r\n          </Card.Grid>\r\n        ))}\r\n        <Divider/>\r\n        <h3>Your Information</h3>\r\n        <Table dataSource={[userInfo]} columns={userCols}/>\r\n        <Divider/>\r\n        <h3>Your Comparables</h3>\r\n        <Table dataSource={comparables} columns={compCols}/>\r\n        <p>{propInfo}</p>\r\n        <Button\r\n          type=\"danger\"\r\n          onClick={back}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={confirmInfo}\r\n        >\r\n          <Link to=\"/completedappeal\">Finalize Appeal</Link>\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n  \r\nconst ReviewForm = (props) => {\r\n    const {\r\n        targetProperty,\r\n        propInfo,\r\n        userInfo,\r\n        comparables,\r\n        confirmInfo,\r\n        back,\r\n    } = props;\r\n    console.log(comparables);\r\n    return (\r\n        <>\r\n            <PropertyInfo2\r\n                targetProperty={targetProperty} \r\n                cols={5}\r\n                propInfo={propInfo} \r\n                userInfo={userInfo}\r\n                comparables={comparables}\r\n                confirmInfo={confirmInfo}\r\n                back={back}\r\n            />\r\n        </>\r\n    );\r\n};\r\n  \r\nexport default ReviewForm;","import React, { useState } from 'react';\r\nimport { submitAppeal, submitForm } from '../requests';\r\nimport ContactInfo from './homeowner/contact-info';\r\nimport ReviewProperty from './homeowner/review-property';\r\nimport ComparablesForm from './comparables/comparables';\r\nimport EligibilityRequirements from './homeowner/eligibility-requirements';\r\nimport ReviewPage from './review/review-page';\r\n\r\nconst removeComparable = async (properties, idx) => properties.filter((ele, i) => (i !== idx));\r\n\r\nconst Appeal = (props) => {\r\n  const { city } = props;\r\n  const [comparables, setComparables] = useState([]);\r\n  const [headers, setHeaders] = useState([]); /*headers for comp table*/\r\n  const [targetProperty, setTargetProperty] = useState(null);\r\n  const [userInfo, setInfo] = useState({}); /*inputted user info*/\r\n  const [userPropInfo, setUserPropInfo] = useState({}); /*inputted user prop info*/\r\n  const [pin, setPin] = useState(null);\r\n  const [propInfo, setPropInfo] = useState([]); /*target property characteristics*/\r\n  const [sessionUuid, setUuid] = useState([]);\r\n  const [reportedEligibility, setEligibility] = useState([]); /*boolean for elig. status*/\r\n  const [reviewAppeal, setReview] = useState(null); /*boolean to adv to review page*/\r\n  const [reviewComps, setReviewComps] = useState(null); /*boolean to adv to comps page*/\r\n  /*\r\n  Appeal has a series of pages viewed in seq order\r\n  \r\n  1) Eligibility Requirements (Default): Find pin and sets uuid\r\n  2) Contact Info: Collects Contact Info\r\n  3) Review Property: Review Selected Property Information\r\n  4) Comparables: Select Comparables\r\n  5) Review Page: Review Appeal\r\n\r\n  */\r\n\r\n  let view = (\r\n    <EligibilityRequirements\r\n      logPin={(selectedPin) => { setPin(selectedPin); }}\r\n      city={city}\r\n      logUuid={(givenUuid) => { setUuid(givenUuid); }}\r\n      logEligibility={(givenEligibility) => { setEligibility(givenEligibility); }}\r\n    />\r\n  );\r\n\r\n  if (pin != null) {\r\n    view = (\r\n      <ContactInfo\r\n        city={city}\r\n        pin={pin}\r\n        uuid={sessionUuid}\r\n        eligibility={reportedEligibility}\r\n        submitForm={async (info) => {\r\n          const response = await submitForm(info);\r\n          if (response != null) {\r\n            setInfo(info);\r\n            setComparables(response.comparables);\r\n            setHeaders(response.labeled_headers);\r\n            setTargetProperty(response.target_pin[0]);\r\n            setPropInfo(response.prop_info)\r\n          }\r\n        }}\r\n        back={() => {\r\n          setInfo({});\r\n          setPin(null);\r\n          setComparables([]);\r\n          setHeaders([]);\r\n          setTargetProperty(null);\r\n          setPropInfo([]);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (targetProperty != null) {\r\n    view = (\r\n      <ReviewProperty\r\n        targetProperty={targetProperty}\r\n        propInfo={propInfo}\r\n        submitPropReview={async (info) => { \r\n          setReviewComps(true);\r\n          setUserPropInfo(info);\r\n        }}\r\n        back={() => {\r\n          setInfo({});\r\n          setComparables([]);\r\n          setHeaders([]);\r\n          setTargetProperty(null);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (reviewComps != null) {\r\n    view = (\r\n      <ComparablesForm\r\n        comparables={comparables}\r\n        headers={headers}\r\n        targetProperty={targetProperty}\r\n        propInfo={propInfo}\r\n        submitAppeal={async () => { \r\n          setReview(true);\r\n        }}\r\n        removeComparable={async (idx) => {\r\n          setComparables(await removeComparable(comparables, idx - 1));\r\n          console.log(`removed ${idx - 1}`);\r\n        }}\r\n        back={() => {\r\n          setInfo({});\r\n          setComparables([]);\r\n          setHeaders([]);\r\n          setReviewComps(null);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (reviewAppeal != null) {\r\n    view = (\r\n      <ReviewPage \r\n        targetProperty={targetProperty} \r\n        propInfo={propInfo} \r\n        userInfo={userInfo}\r\n        comparables={comparables}\r\n        confirmInfo={() => {\r\n          submitAppeal(targetProperty, comparables, userInfo, userPropInfo, sessionUuid);\r\n        }}\r\n        back={() => {\r\n          setReview(null);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return view;\r\n};\r\n\r\nexport default Appeal;\r\n","import React from 'react';\r\nimport { Button, Space } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PTAPHeader3 = () => (\r\n    <>\r\n      <h2>We currently have automated appeal systems for Detroit, Michigan and Cook County, Illinois.</h2>\r\n      <p>Click one of the buttons to get started with your appeal.</p>\r\n      <Space>\r\n        <Button><Link to=\"/detroit\">Detroit</Link></Button>\r\n        <Button><Link to=\"/cook\">Cook County</Link></Button>\r\n      </Space>\r\n    </>\r\n  );\r\n  \r\n  export default PTAPHeader3;","import React from 'react';\r\nimport { Button, Space } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PTAPHeader4 = () => (\r\n  <>\r\n    <h2>Your application has now been submitted</h2>\r\n    <p>What to Expect Next? Our team will contact you before the Feb. 15th deadline to complete your appeal. \r\n      In the meantime, if you have any questions you can reach us at our hotline (INSERT NUMBER) or at&nbsp;\r\n      <a href='mailto:law-propertytax@umich.edu?subject=Questions after Submission'>law-propertytax@umich.edu</a>. \r\n    </p>\r\n    <ul>\r\n        <li> <b>&#10003; You are Here!</b> Step 1: Complete this online application by February 10, 2020.</li>\r\n        <li>Step 2: Once you complete the application, our team will receive a draft appeal letter.</li>\r\n        <li>Step 3: Our team will call you to review the appeal letter.</li>\r\n        <li>Step 4: Our team will send you a “Letter of Authorization,” which you must sign in order for us to represent you and send the appeal in on your behalf.</li>\r\n        <li>Step 5: On February 15, 2021, our team will submit the necessary documents at the Assessor’s Review (the first stage of the appeal process).</li>\r\n        <li>Step 6: On March 8, 2021, our team will file the appeal documents at the March Board of Review (the second stage of the appeal process).</li>\r\n        <li>Step 7: Sometime in March, the City will send you its decision.</li>\r\n        <li>Step 8: Our team will follow up with you to discuss other housing-related resources.</li>\r\n      </ul>\r\n    <Space>\r\n      <Button type=\"primary\"><Link to=\"/illegalforeclosures\">See more information on our website</Link></Button>\r\n    </Space>\r\n  </>\r\n);\r\n\r\nexport default PTAPHeader4;\r\n","import 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Layout } from 'antd';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport Header from './general/header';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport DetroitLandingPage from './landing/detroit-landing-page';\r\nimport Appeal from './appeal/appeal';\r\nimport SelectRegion from './landing/select-region';\r\nimport FinalPage from './landing/final-page';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nconst Page = () => (\r\n  <Router>\r\n    <Layout className=\"layout\">\r\n      <Header />\r\n      <Content style={{ padding: '0 3vw' }}>\r\n        <div className=\"site-layout-content\">\r\n          <Switch>\r\n            <Route\r\n              path=\"/detroit\"\r\n              render={() => <DetroitLandingPage />}\r\n            />\r\n            <Route\r\n              path=\"/detroitappeal\"\r\n              render={() => <Appeal city=\"detroit\" />}\r\n            />\r\n            <Route\r\n              path=\"/cook\"\r\n              render={() => <Appeal city=\"chicago\" />}\r\n            />\r\n            <Route \r\n              path='/completedappeal' \r\n              render={() => <FinalPage />}\r\n            />\r\n            <Route \r\n              path='/illegalforeclosures' \r\n              component={() => { \r\n                window.location.href = 'https://illegalforeclosures.org/'; return null;}}\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              render={() => <SelectRegion />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Property Tax Appeal Project</Footer>\r\n    </Layout>\r\n  </Router>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Page />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}