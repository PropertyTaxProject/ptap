{"version":3,"sources":["general/header.jsx","serviceWorker.js","landing/landing-page.jsx","requests.js","appeal/homeowner/contact-characteristics.jsx","appeal/comparables/comparables.jsx","appeal/homeowner/eligibility-requirements.jsx","appeal/appeal.jsx","landing/get-started.jsx","landing/select-region.jsx","appeal/damage/image-upload.jsx","appeal/damage/damage-input.jsx","appeal/damage/damages.jsx","index.jsx"],"names":["Header","Layout","PTAPHeader","theme","mode","Item","key","href","Boolean","window","location","hostname","match","to","submitForm","info","a","axios","post","resp","console","log","data","response","error","submitAppeal","targetProperty","comparables","userInfo","uuid","body","target_pin","detroit","responseType","saveAs","name","split","join","toLowerCase","formItemLayout","labelCol","span","wrapperCol","xs","sm","md","lg","tailFormItemLayout","offset","HomeownerInfo","label","rules","required","message","whitespace","type","Group","value","PropertyForm","props","Form","useForm","form","city","pin","onFinish","values","appealType","appeal_type","labelAlign","scrollToFirstError","autoComplete","noStyle","onClick","back","htmlType","Column","Table","re","createTitle","title","replace","x","toUpperCase","CharacteristicsTable","headers","removeComparable","useState","loading","setLoading","Columns","map","header","dataIndex","sort","labeledData","property","idx","dataSource","scroll","render","text","record","danger","Number","parseInt","then","PropertyInfo","propInfo","cols","gridStyle","width","Math","round","textAlign","characteristics","Object","entries","filter","description","title1","title2","t1","t2","Grid","hoverable","style","Characteristics","submitted","lookupPin","Lookup","pins","setPin","logPin","logUuid","logResponse","theResponse","candidates","err","columns","getFieldValue","alert","eligibility","PIN","selectPin","layout","min","max","compact","placeholder","length","properties","ele","i","Appeal","setComparables","setHeaders","setTargetProperty","setInfo","setPropInfo","sessionUuid","setUuid","view","selectedPin","givenUuid","labeled_headers","prop_info","PTAPHeader2","PTAPHeader3","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","React","Component","TextArea","Input","Option","Select","img","callback","addEventListener","beforeUpload","isJpgOrPng","isLt8M","size","Avatar","state","handleChange","status","originFileObj","imageUrl","setState","uploadButton","this","LoadingOutlined","PlusOutlined","className","listType","showUploadList","action","onChange","src","alt","DamageInput","id","rows","CardBody","Damages","damages","setDamages","concat","slice","Content","Footer","Page","padding","path","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.96443e23.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\nconst PTAPHeader = () => (\r\n  <Header>\r\n    <Menu theme=\"dark\" mode=\"horizontal\">\r\n      <Menu.Item key=\"1\"><a href=\"/\">Property Tax Appeal Project: Automated Appeal System</a></Menu.Item>\r\n    </Menu>\r\n  </Header>\r\n);\r\n\r\nexport default PTAPHeader;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Button, Space } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PTAPHeader = () => (\r\n  <>\r\n    <h2>Welcome to the Property Tax Appeal Project&apos;s automated appeal system.</h2>\r\n\r\n    <h2>The Tax Foreclosure Crisis</h2>\r\n    <p>Information on the crisis.</p>\r\n    <h2>Why should you appeal?</h2>\r\n    <p>Answer the question.</p>\r\n    <Space>\r\n      <Button><Link to=\"/getstarted\">Get Started with Your Appeal!</Link></Button>\r\n    </Space>\r\n  </>\r\n);\r\n\r\nexport default PTAPHeader;\r\n","import axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport const submitForm = async (info) => {\r\n  try {\r\n    const resp = await axios.post('/api_v1/submit', info);\r\n    console.log(resp);\r\n    return resp.data.response;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const submitAppeal = async (targetProperty, comparables, userInfo, uuid) => {\r\n  try {\r\n    const body = { target_pin: targetProperty, comparables, uuid, ...userInfo };\r\n    console.log(body);\r\n    //const detroit = userInfo.appeal_type === 'detroit_single_family'; TEMPORARY DOWNLOAD ALL\r\n    const detroit = true;\r\n    const resp = await axios.post('/api_v1/submit2', body, { responseType: detroit ? 'blob' : 'json' }); // detroit downloads file, chicago returns json\r\n    if (detroit) {\r\n      saveAs(resp.data, `${userInfo.name.split(' ').join('-').toLowerCase()}-appeal.docx`);\r\n    } else {\r\n      console.log(resp);\r\n    }\r\n    // TRIGGER SUBMISSION PAGE\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Row,\r\n  Col,\r\n  Space,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 20,\r\n    },\r\n    md: {\r\n      span: 18,\r\n    },\r\n    lg: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n  },\r\n};\r\n\r\nconst HomeownerInfo = () => (\r\n  <>\r\n    <Row>\r\n      <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}>\r\n        <h1>Homeowner Information</h1>\r\n        <p>How should we contact you?</p>\r\n        <br />\r\n      </Col>\r\n    </Row>\r\n    <Form.Item\r\n      name=\"name\"\r\n      label=\"Full Name\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your full name!',\r\n          whitespace: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n    <Form.Item\r\n      name=\"email\"\r\n      label=\"Email\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your Email!',\r\n          whitespace: true,\r\n          type: 'email',\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n  \r\n    <Form.Item\r\n      name=\"phone\"\r\n      label=\"Phone Number\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your phone number!',\r\n          whitespace: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      name=\"address\"\r\n      label=\"Street Address\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your street address!',\r\n          whitespace: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      name=\"city\"\r\n      label=\"City\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your city!',\r\n          whitespace: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      name=\"state\"\r\n      label=\"State\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your State!',\r\n          whitespace: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      name=\"zip\"\r\n      label=\"Zip Code\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your zip code!',\r\n          whitespace: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      name=\"preferred\"\r\n      label=\"Preferred Contact Method:\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please mark your preferred method!',\r\n          whitespace: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Radio.Group>\r\n        <Radio value='Phone'>Phone</Radio>\r\n        <Radio value='Email'>Email</Radio>\r\n      </Radio.Group>\r\n    </Form.Item>\r\n  </>\r\n);\r\n\r\n// unused for now, we can use this code if we ever want an option to directly enter a pin\r\n// const PinForm = () => (\r\n//   <Form.Item\r\n//     name=\"pin\"\r\n//     label=\"Pin\"\r\n//     rules={[\r\n//       {\r\n//         required: true,\r\n//         message: 'Please input your pin!',\r\n//         whitespace: true,\r\n//       },\r\n//     ]}\r\n//   >\r\n//     <Input />\r\n//   </Form.Item>\r\n// );\r\n\r\nconst CharacteristicsForm = () => (\r\n  <Form.Item\r\n    name=\"pin\"\r\n    label=\"Pin\"\r\n    rules={[\r\n      {\r\n        required: true,\r\n        message: 'Please input your pin!',\r\n        whitespace: true,\r\n      },\r\n    ]}\r\n  >\r\n    <Input />\r\n  </Form.Item>\r\n);\r\n\r\n\r\n\r\nconst PropertyForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { submitForm, city, pin, uuid } = props;\r\n\r\n  const onFinish = (values) => {\r\n    let appealType;\r\n    if (city === 'detroit') {\r\n      appealType = 'detroit_single_family';\r\n    } else if (city === 'chicago') {\r\n      appealType = 'cook_county_single_family';\r\n    }\r\n    const info = { ...values, pin, appeal_type: appealType, uuid };\r\n    console.log('Received values of form: ', info);\r\n    submitForm(info);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"Housing Information\"\r\n      onFinish={onFinish}\r\n      labelAlign=\"left\"\r\n      scrollToFirstError\r\n      autoComplete=\"off\"\r\n      {...formItemLayout}\r\n    >\r\n      <Row>\r\n        <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}>\r\n          <h1>Your Information </h1>\r\n          <p>In order to properly file your appeal, we need your contact information and for you to verify information on your property.</p>\r\n          <br />\r\n        </Col>\r\n      </Row>\r\n      <Form.Item noStyle>\r\n        {/* <PinForm /> */}\r\n        <HomeownerInfo />\r\n        {/*<CharacteristicsForm />*/}\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Space>\r\n          <Button type=\"danger\" onClick={props.back} >Back</Button>\r\n          <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n        </Space>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PropertyForm;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Divider,\r\n  Card,\r\n} from 'antd';\r\n\r\nconst { Column } = Table;\r\n\r\nconst re = /(\\b[a-z](?!\\s))/g;\r\nconst createTitle = (title) => title.replace('_', ' ').replace(re, (x) => x.toUpperCase());\r\n\r\nconst CharacteristicsTable = (props) => {\r\n  const {\r\n    comparables,\r\n    headers,\r\n    submitAppeal,\r\n    removeComparable,\r\n    back,\r\n  } = props;\r\n  const data = comparables;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // const headers = {};\r\n  // for (let i = 0; i < data.length; i += 1) {\r\n  //   const property = data[i];\r\n  //   Object.keys(property).forEach((header) => {\r\n  //     headers[header] = 1;\r\n  //   });\r\n  // }\r\n\r\n  const Columns = headers.map(\r\n    (header) => <Column title={createTitle(header)} dataIndex={header} key={header} />,\r\n  ).sort();\r\n\r\n  const labeledData = data.map((property, idx) => ({ property: `Comparable ${idx}`, ...property }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}>\r\n          <h1>Select relevant comparables</h1>\r\n          <p>Delete comparables you do not wish to include in your appeal.</p>\r\n          <br />\r\n        </Col>\r\n      </Row>\r\n      <Table dataSource={labeledData} loading={loading} scroll={{ x: true }}>\r\n        <Column title=\"Property\" dataIndex=\"property\" key=\"property\" />\r\n        {Columns}\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record) => (\r\n            record.property === 'Your Property' ? null\r\n              : (\r\n                <Button\r\n                  danger\r\n                  onClick={() => {\r\n                    setLoading(true);\r\n                    removeComparable(Number.parseInt(record.property.split(' ')[1], 10)).then(() => {\r\n                      setLoading(false);\r\n                    });\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              )\r\n          )}\r\n        />\r\n      </Table>\r\n      <Space>\r\n        <Button\r\n          type=\"danger\"\r\n          onClick={back}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={submitAppeal}\r\n        >\r\n          Generate Appeal\r\n        </Button>\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\n// displays the target property information\r\nconst PropertyInfo = (props) => {\r\n  const { targetProperty } = props;\r\n  const { propInfo } = props;\r\n  const { cols } = props;\r\n  const gridStyle = {\r\n    width: `${Math.round(100 / cols)}%`,\r\n    textAlign: 'center',\r\n  };\r\n  const characteristics = Object.entries(targetProperty).filter(([title, description]) => (\r\n    title !== '' && description !== ''\r\n  ));\r\n  characteristics.sort(([title1], [title2]) => {\r\n    const t1 = title1.toLowerCase();\r\n    const t2 = title2.toLowerCase();\r\n    if (t1 > t2) { return 1; }\r\n    if (t1 < t2) { return -1; }\r\n    return 0;\r\n  });\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={{ span: 24, offset: 0 }} sm={{ span: 24, offset: 0 }}>\r\n          <h1>Your Property</h1>\r\n          <p>Below is the data that we have on file for your property.</p>\r\n          <p>{propInfo}</p>\r\n          <br />\r\n        </Col>\r\n      </Row>\r\n      {characteristics.map(([title, description]) => (\r\n        <Card.Grid hoverable={false} style={gridStyle}>\r\n          <Row><b>{createTitle(title)}</b></Row>\r\n          <Row><p>{description}</p></Row>\r\n        </Card.Grid>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Characteristics = (props) => {\r\n  const {\r\n    comparables,\r\n    headers,\r\n    targetProperty,\r\n    propInfo,\r\n    uuid,\r\n    submitAppeal,\r\n    removeComparable,\r\n    back,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <PropertyInfo \r\n        targetProperty={targetProperty} \r\n        cols={5}\r\n        propInfo={propInfo} />\r\n      <Divider />\r\n      <CharacteristicsTable\r\n        comparables={comparables}\r\n        headers={headers}\r\n        removeComparable={removeComparable}\r\n        submitAppeal={submitAppeal}\r\n        back={back}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Characteristics;\r\n","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Button,\r\n  Table,\r\n  Radio\r\n} from 'antd';\r\n\r\nimport axios from 'axios';\r\n\r\nvar submitted = false;\r\n\r\nconst lookupPin = async (data) => {\r\n  try {\r\n    console.log(data);\r\n    return (await (axios.post('/api_v1/pin-lookup', data))).data.response;\r\n  } catch (err) {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Lookup = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [pins, setPin] = useState([]);\r\n\r\n  const { logPin, city, logUuid } = props;\r\n\r\n  const logResponse = (theResponse) => {\r\n    submitted = true;\r\n    try {\r\n      setPin(theResponse.candidates);\r\n      logUuid(theResponse.uuid);\r\n    } catch (err) {\r\n      setPin([]);\r\n    }\r\n  }\r\n\r\n\r\n  const selectPin = (record) => { //determine eligibility and log pin\r\n    if (form.getFieldValue('residence') !== 'Yes'){\r\n      alert(\"You may not be eligible to receive our services. Please contact our hotline at XXX-XXX-XXXX. Code: Residency\");\r\n    } else if (form.getFieldValue('owner') !== 'Yes'){\r\n      alert(\"You may not be eligible to receive our services. Please contact our hotline at XXX-XXX-XXXX. Code: Ownership\");\r\n    } else if (record.eligibility === false){\r\n      alert(\"You may not be eligible to receive our services. Please contact our hotline at XXX-XXX-XXXX. Code: Assessed Value\");\r\n    }\r\n    logPin(record.PIN);\r\n  };\r\n\r\n  // TODO: Centralize this mapping\r\n  let appealType;\r\n  if (city === 'detroit') {\r\n    appealType = 'detroit_single_family';\r\n  } else if (city === 'chicago') {\r\n    appealType = 'cook_county_single_family';\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'Address',\r\n      key: 'Address',\r\n    },\r\n    {\r\n      title: 'Pin',\r\n      dataIndex: 'PIN',\r\n      key: 'pin',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Button onClick={() => { selectPin(record); }}>Select</Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <h2>Eligibility Requirements</h2>\r\n      <p>Let&apos;s begin by determining if you are eligibile for our services.</p>\r\n\r\n      <Form\r\n        form={form}\r\n        name=\"Pin Lookup\"\r\n        layout='vertical'\r\n        onFinish={async (data) => { logResponse(await lookupPin({ appeal_type: appealType, ...data })); }}\r\n        labelAlign=\"left\"\r\n        scrollToFirstError\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item \r\n          name=\"residence\" \r\n          rules={[{ required: true, message: 'Your response is required.' }]}\r\n          label=\"First, is this home your primary residence, meaning the place you live most of the year?\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value='Yes'>Yes</Radio>\r\n            <Radio value='No'>No</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item \r\n          name=\"owner\" \r\n          rules={[{ required: true, message: 'Your response is required.' }]}\r\n          label = \"Second, did you inherit or buy this home?\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value='Yes'>Yes</Radio>\r\n            <Radio value='No'>No</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <p style={{ width: '350px' }}></p>\r\n        <Form.Item \r\n          name=\"owner_year\" \r\n          rules={[{ required: true, message: 'Your response is required.' }]}\r\n          label=\"Third, what year did you buy or inherit the home? (If you are not sure, it is okay to guess)\"\r\n        >\r\n          <InputNumber min={1925} max={2021}/>\r\n        </Form.Item>\r\n\r\n        <p style={{ width: '350px' }}>Finally, enter your street number and street name and select your property from the table.</p>\r\n\r\n        <Input.Group compact>\r\n          <Form.Item style={{ width: '100px' }} name=\"st_num\" rules={[{ required: true, message: 'Street name is required.' }]}>\r\n            <Input type=\"number\" placeholder=\"number\" />\r\n          </Form.Item>\r\n          <Form.Item style={{ width: '300px' }} name=\"st_name\" rules={[{ required: true, message: 'Street name is required.' }]}>\r\n            <Input placeholder=\"street\" />\r\n          </Form.Item>\r\n        </Input.Group>\r\n        <Button type=\"primary\" htmlType=\"submit\">Lookup Pin</Button>\r\n      </Form>\r\n\r\n      {(pins.length !== 0\r\n        ? (\r\n          <>\r\n            <br />\r\n            <Table columns={columns} dataSource={pins} />\r\n          </>\r\n        )\r\n        : (submitted ? 'Your property could not be found. Please try searching again.' : null))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lookup;\r\n","import React, { useState } from 'react';\r\nimport { submitAppeal, submitForm } from '../requests';\r\nimport ContactCharacteristics from './homeowner/contact-characteristics';\r\nimport ComparablesForm from './comparables/comparables';\r\nimport EligibilityRequirements from './homeowner/eligibility-requirements';\r\n\r\n// TODO: MAKE POST REQUEST TO GRAB NEW COMPARABLE\r\nconst removeComparable = async (properties, idx) => properties.filter((ele, i) => (i !== idx));\r\n\r\nconst Appeal = (props) => {\r\n  const { city } = props;\r\n  const [comparables, setComparables] = useState([]);\r\n  const [headers, setHeaders] = useState([]);\r\n  const [targetProperty, setTargetProperty] = useState(null);\r\n  const [userInfo, setInfo] = useState({});\r\n  const [pin, setPin] = useState(null);\r\n  const [propInfo, setPropInfo] = useState([]);\r\n  const [sessionUuid, setUuid] = useState([]);\r\n\r\n  let view = (\r\n    <EligibilityRequirements\r\n      logPin={(selectedPin) => { setPin(selectedPin); }}\r\n      city={city}\r\n      logUuid={(givenUuid) => { setUuid(givenUuid); }}\r\n    />\r\n  );\r\n\r\n  if (pin != null) {\r\n    view = (\r\n      <ContactCharacteristics\r\n        city={city}\r\n        pin={pin}\r\n        uuid={sessionUuid}\r\n        submitForm={async (info) => {\r\n          const response = await submitForm(info);\r\n          if (response != null) {\r\n            setInfo(info);\r\n            setComparables(response.comparables);\r\n            setHeaders(response.labeled_headers);\r\n            setTargetProperty(response.target_pin[0]); // TODO: pass value not list\r\n            setPropInfo(response.prop_info)\r\n          } else {\r\n            // TODO: THROW ERROR\r\n          }\r\n        }}\r\n        back={() => {\r\n          setInfo({});\r\n          setPin(null);\r\n          setComparables([]);\r\n          setHeaders([]);\r\n          setTargetProperty(null);\r\n          setPropInfo([]);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (targetProperty != null) {\r\n    view = (\r\n      <ComparablesForm\r\n        comparables={comparables}\r\n        headers={headers}\r\n        targetProperty={targetProperty}\r\n        propInfo={propInfo}\r\n        uuid={sessionUuid}\r\n        submitAppeal={async () => { submitAppeal(targetProperty, comparables, userInfo, sessionUuid); }}\r\n        removeComparable={async (idx) => {\r\n          setComparables(await removeComparable(comparables, idx));\r\n          console.log(`removed ${idx}`);\r\n        }}\r\n        back={() => {\r\n          setInfo({});\r\n          setComparables([]);\r\n          setHeaders([]);\r\n          setTargetProperty(null);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return view;\r\n};\r\n\r\nexport default Appeal;\r\n","import React from 'react';\r\nimport { Button, Space } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PTAPHeader2 = () => (\r\n    <>\r\n      <h2>Who we Are</h2>\r\n      <p>Who are we? What does this app do?</p>\r\n      <p>Click the “Agree” button below if you want to appeal your property tax assessment with support from a UMLS homeowner advocate.</p>\r\n      <Space>\r\n        <Button><Link to=\"/selectregion\">Agree</Link></Button>\r\n      </Space>\r\n    </>\r\n  );\r\n  \r\n  export default PTAPHeader2;","import React from 'react';\r\nimport { Button, Space } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PTAPHeader3 = () => (\r\n    <>\r\n      <h2>We currently have automated appeal systems for Detroit, Michigan and Cook County, Illinois.</h2>\r\n      <p>Click one of the buttons to get started with your appeal.</p>\r\n      <Space>\r\n        <Button><Link to=\"/detroit\">Detroit</Link></Button>\r\n        <Button><Link to=\"/cook\">Cook County</Link></Button>\r\n      </Space>\r\n    </>\r\n  );\r\n  \r\n  export default PTAPHeader3;","import React from 'react';\r\nimport { Upload, Modal } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nclass PicturesWall extends React.Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n    fileList: [\r\n      {\r\n        uid: '-1',\r\n        name: 'image.png',\r\n        status: 'done',\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n      },\r\n      {\r\n        uid: '-2',\r\n        name: 'image.png',\r\n        status: 'done',\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n      },\r\n      {\r\n        uid: '-3',\r\n        name: 'image.png',\r\n        status: 'done',\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n      },\r\n      {\r\n        uid: '-4',\r\n        name: 'image.png',\r\n        status: 'done',\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n      },\r\n      {\r\n        uid: '-5',\r\n        name: 'image.png',\r\n        status: 'error',\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  Card,\r\n  Space,\r\n  Upload,\r\n  message,\r\n} from 'antd';\r\nimport ImageWall from './image-upload';\r\n\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nconst { TextArea } = Input;\r\n\r\nconst { Option } = Select;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 20,\r\n    },\r\n    md: {\r\n      span: 18,\r\n    },\r\n    lg: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG files!');\r\n  }\r\n  const isLt8M = file.size / 1024 / 1024 < 8;\r\n  if (!isLt8M) {\r\n    message.error('Image must smaller than 8MB!');\r\n  }\r\n  return isJpgOrPng && isLt8M;\r\n}\r\n\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n      },\r\n    };\r\n    \r\n    \r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl =>\r\n        this.setState({\r\n          imageUrl,\r\n          loading: false,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div style={{width: '330px'}}>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n    return (\r\n      <Upload\r\n        name=\"avatar\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        action=\"UPLOAD URL\"\r\n        beforeUpload={beforeUpload}\r\n        onChange={this.handleChange}\r\n      >\r\n        {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n      </Upload>\r\n    );\r\n  }\r\n}\r\n\r\nconst CardBody = (props) => {\r\n  const {id} = props;\r\n\r\n  return (\r\n    <Card\r\n      title={(\r\n        <Form.Item name={`damage_type_${id}`} label=\"Damage Type\" noStyle rules={[{ required: true }]}>\r\n          <Select\r\n            style={{width: '350px'}}\r\n            placeholder=\"Select a option and change input text above\"\r\n            onChange={() => {console.log(id)}}\r\n          >\r\n            <Option value=\"garage\">Garage Damage</Option>\r\n            <Option value=\"roof\">Water Damage</Option>\r\n            <Option value=\"water\">Roof Damage</Option>\r\n          </Select>\r\n        </Form.Item>\r\n)}\r\n      style={{ width: '400px' }}\r\n    >\r\n      <DamageInput id={id}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst DamageInput = (props) => {\r\n  const a = 0;\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        name={`damage_description_${props.id}`}\r\n        label=\"Damage Description\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please add a description of your damage.',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n        noStyle\r\n      >\r\n        <TextArea rows={4} placeholder=\"Please provide any details regarding the damage.\" />\r\n      </Form.Item>\r\n      <br/>\r\n      <br/>\r\n      <p>Please upload any images of the damage.</p>\r\n      <Form.Item\r\n        name={`damage_image_${props.id}`}\r\n        label=\"Damage Image\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input damage information!',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n        noStyle\r\n      >\r\n        <Avatar></Avatar>\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  Card,\r\n  Space,\r\n  Upload,\r\n  message,\r\n} from 'antd';\r\n\r\nimport DamageInput from './damage-input';\r\n\r\nconst Damages = () => {\r\n  const [damages, setDamages] = useState([<DamageInput id={0} key={0} />]);\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Received values of form: ', 'test');\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"Housing Information\"\r\n      onFinish={onFinish}\r\n      labelAlign=\"left\"\r\n      scrollToFirstError\r\n      autoComplete=\"off\"\r\n    >\r\n      {damages}\r\n      <Space>\r\n        <Button onClick={() => { setDamages(damages.concat([<DamageInput id={damages.length} key={damages.length} />])); }}>Add Damage</Button>\r\n        <Button onClick={() => { setDamages(damages.slice(0, Math.max(0, damages.length - 1))); }}>Remove Damage</Button>\r\n      </Space>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Damages;\r\n","import 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Layout } from 'antd';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport Header from './general/header';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport LandingPage from './landing/landing-page';\r\nimport Appeal from './appeal/appeal';\r\nimport GetStarted from './landing/get-started';\r\nimport SelectRegion from './landing/select-region';\r\nimport Damage from './appeal/damage/damages';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nconst Page = () => (\r\n  <Router>\r\n    <Layout className=\"layout\">\r\n      <Header />\r\n      <Content style={{ padding: '0 3vw' }}>\r\n        <div className=\"site-layout-content\">\r\n          <Switch>\r\n            <Route\r\n              path=\"/detroit\"\r\n              render={() => <Appeal city=\"detroit\" />}\r\n            />\r\n            <Route\r\n              path=\"/cook\"\r\n              render={() => <Appeal city=\"chicago\" />}\r\n            />\r\n            <Route\r\n              path=\"/getstarted\"\r\n              render={() => <GetStarted />}\r\n            />\r\n            <Route\r\n              path=\"/selectregion\"\r\n              render={() => <SelectRegion />}\r\n            />\r\n            <Route\r\n              path=\"/test2\"\r\n              render={() => <Damage />}\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              render={() => <LandingPage />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Property Tax Appeal Project</Footer>\r\n    </Layout>\r\n  </Router>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Page />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}